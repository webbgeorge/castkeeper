package components

import (
	"context"
	"fmt"
	"github.com/webbgeorge/castkeeper"
	"github.com/webbgeorge/castkeeper/pkg/auth/sessions"
	"github.com/webbgeorge/castkeeper/pkg/auth/users"
	"strings"
	"time"
)

func jsURL() string {
	return fmt.Sprintf("/static/bundle.js?cb=%s", castkeeper.Version)
}

func cssURL() string {
	return fmt.Sprintf("/static/bundle.css?cb=%s", castkeeper.Version)
}

func user(ctx context.Context) *users.User {
	session := sessions.GetSessionFromCtx(ctx)
	if session == nil {
		return nil
	}
	return &session.User
}

func avatarText(ctx context.Context) string {
	firstChar := string([]rune(user(ctx).Username)[0])
	return strings.ToUpper(firstChar)
}

templ Layout(title string) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1"/>
			<title>{ pageTitle(title) }</title>
			<link rel="stylesheet" href={ cssURL() }/>
			<link rel="icon" href="/static/favicon.svg" type="image/svg+xml"/>
		</head>
		<body class="bg-base-200 text-base-content min-h-screen flex flex-col">
			<header class="navbar py-6 px-4 sm:px-6 bg-base-300 text-base-content">
				<div class="flex-1">
					<h2 class="text-lg"><a href="/">CastKeeper</a></h2>
				</div>
				if user(ctx) != nil {
					<div class="flex-none">
						<div class="dropdown dropdown-end">
							<div tabindex="0" role="button" class="btn btn-ghost btn-circle w-8 h-8 avatar avatar-placeholder">
								<div class="bg-info text-info-content w-8 rounded-full">
									<span class="text-xs">{ avatarText(ctx) }</span>
								</div>
							</div>
							<ul
								tabindex="0"
								class="menu dropdown-content bg-base-100 rounded-box z-1 mt-3 w-52 p-2 shadow-xl"
							>
								<li class="menu-title">
									<div class="w-42 truncate">
										Logged in as { user(ctx).Username }
									</div>
								</li>
								<li><a href="/auth/logout">Logout</a></li>
							</ul>
						</div>
					</div>
				}
			</header>
			<main class="grow mx-4 sm:mx-6">
				{ children... }
			</main>
			<footer class="my-6 mx-4 sm:mx-6 text-center">
				CastKeeper is licensed under the <a class="link" target="_blank" href="https://opensource.org/license/agpl-v3/">AGPL-3.0 License</a>.
				<br/>
				Copyright &copy; { time.Now().Format("2006") } George Webb
				<br/>
				<a class="link" target="_blank" href="https://github.com/webbgeorge/castkeeper">GitHub</a>
			</footer>
			<div id="toasts" class="fixed bottom-4 right-4 flex flex-col gap-4"></div>
			<script src={ jsURL() }></script>
		</body>
	</html>
}

func pageTitle(title string) string {
	if title == "" {
		return "CastKeeper"
	}
	if len(title) > 30 {
		title = title[:30] + "..."
	}
	return fmt.Sprintf("%s | CastKeeper", title)
}
